// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum OrganizationRole {
    OWNER
    ADMIN
    MEMBER
}

enum TeamRole {
    QA
    UI_UX
    DEVOPS
    MANAGER
    DEVELOPER
    SCRUM_MASTER
}

model User {
    id String @id @default(cuid())

    firstName    String?
    lastName     String?
    username     String? @unique
    emailAddress String  @unique
    imageUrl     String?

    organizationMemberships OrganizationMembership[]
    organizationInvitations OrganizationInvitation[]
    teamMemberships         TeamMembership[]
    teamInvitations         TeamInvitation[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Organization {
    id String @id @default(cuid())

    name     String
    imageUrl String?

    organizationMemberships OrganizationMembership[]
    organizationInvitations OrganizationInvitation[]
    teams                   Team[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model OrganizationMembership {
    id String @id @default(cuid())

    role OrganizationRole

    user         User         @relation(fields: [userId], references: [id])
    organization Organization @relation(fields: [organizationId], references: [id])

    userId         String
    organizationId String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model OrganizationInvitation {
    id String @id @default(cuid())

    issuedByUserId String
    isAccepted     Boolean @default(false)

    organization Organization @relation(fields: [organizationId], references: [id])
    user         User         @relation(fields: [userId], references: [id])

    userId         String
    organizationId String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Team {
    id String @id @default(cuid())

    name     String
    imageUrl String?

    organization Organization @relation(fields: [organizationId], references: [id])

    teamMemberships TeamMembership[]
    teamInvitations TeamInvitation[]

    organizationId String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model TeamMembership {
    id String @id @default(cuid())

    user User @relation(fields: [userId], references: [id])
    team Team @relation(fields: [teamId], references: [id])

    role TeamRole

    userId String
    teamId String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model TeamInvitation {
    id String @id @default(cuid())

    issuedByUserId String
    isAccepted     Boolean @default(false)

    team Team @relation(fields: [teamId], references: [id])
    user User @relation(fields: [userId], references: [id])

    userId String
    teamId String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
